{"version":3,"sources":["component/Header.js","component/Footer.js","component/Home.js","component/AddWatchList.js","component/MarketGraph.js","component/Portfolio.js","component/TransactionDetail.js","component/TotalExpense.js","component/AddTransaction.js","component/Budget.js","component/Login.js","component/Income.js","component/RegisterUser.js","component/Note.js","component/CreateArea.js","component/TodoList.js","component/Main.js","redux/ActionCreators.js","redux/ActionTypes.js","shared/products.js","redux/products.js","shared/expenses.js","redux/expense.js","redux/AddTransationForm.js","shared/users.js","redux/users.js","App.js","redux/configureStore.js","index.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Fragment","sticky","expand","className","onClick","isOpen","navbar","to","React","Component","Footer","year","Date","getFullYear","Home","style","marginTop","alignItems","marginLeft","marginRight","backgroundColor","borderColor","src","alt","required","val","length","maxLength","len","minLength","isNumber","isNaN","AddWatchList","handleSubmit","values","console","log","JSON","stringify","addProduct","stock","limitPrice","toggle","products","touched","onSubmit","htmlFor","md","text","model","id","name","placeholder","validators","show","component","messages","type","color","MarketGraph","stockXValue","stockYValue","fetchStock","pointerToThis","stockxValueFunc","stockyValueFunc","fetch","then","response","json","data","key","push","x","y","mode","marker","layout","width","height","title","Portfolio","useState","setIsOpen","deleteProduct","modal","setModal","toggleModal","closeBtn","list","map","product","close","outline","striped","responsive","scope","TransactionDetail","items","deleteItem","item","date","merchant","amount","bordered","TotalExpense","totalIncome","totalExpenses","amounts","debits","filter","transactiontype","expenses","income","reduce","acc","parseInt","dateformat","bits","split","d","getMonth","AddTransactionForm","addExpense","resetTransactionForm","select","size","offset","AddTransaction","MyNav","doc","jsPDF","setFontSize","content","startY","head","body","autoTable","save","exportPDF","Budget","Login","authenticateUser","users","email","password","isRegistered","Income","justifyContent","validateEmail","test","Register","addUser","alert","Note","onDelete","CreateArea","note","setNote","handleChange","event","target","value","prevNote","onChange","onAdd","preventDefault","TodoList","notes","setNotes","deleteNote","prevNotes","noteItem","index","newNote","mapDispatchToProps","payload","actions","reset","Main","path","exact","render","withRouter","connect","PRODUCTS","Products","action","concat","EXPENSES","Expenses","expense","InitialTransaction","USERS","Users","user","store","createStore","combineReducers","createForms","transactionForm","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20758fb8.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Nav,\n  Navbar,\n  NavbarToggler,\n  Collapse,\n  NavItem\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen,\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar  sticky=\"top\" expand=\"md\">\n          <div className=\"container-fluid\">\n            <NavbarToggler onClick={this.toggleNav} />\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/home\">\n                    <i className=\"fa fa-home fa-lg\" /> Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/budget\">\n                    <i className=\"fa fa-money fa-lg\" /> Budget\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/portfolio\">\n                    <i className=\"fa fa-eye fa-lg\" /> WatchList\n                  </NavLink>\n                </NavItem>\n                \n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/todo\">\n                    <i className=\"fa fa-list fa-lg\" /> My Tasks\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/login\">\n                    <i className=\"fa fa-sign-in fa-lg\" /> Login\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer className=\"site-footer\">\n      <p>Copyright ⓒ NehaAgrawal {year}</p>\n      </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Card, CardImg, CardFooter } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div className=\"container-fluid home-container\">\n      {/* <Jumbotron fluid> */}\n      <div className=\"row\">\n        <div className=\"col mt-5\">\n          <h2>Plan Future: What’s in your wallet?</h2>\n        </div>\n      </div>\n\n      <div\n        className=\"row\"\n        style={{\n          marginTop: 100,\n          alignItems: \"center\",\n          marginLeft: 100,\n          marginRight: 100,\n        }}\n      >\n        <div className=\"col\">\n          <Card style={{ backgroundColor: \"#0d47a1\", borderColor: \"primary \" }}>\n            <CardImg\n              src=\"../images/pie2.jpg\"\n              alt=\"Expenses\"\n              className=\"align-self-center homeImg\"\n            />\n            <CardFooter>\n              <Link to=\"/budget\" className=\"nav-link\">\n                <i className=\"fa fa-money fa-lg\" />\n                Budget\n              </Link>\n            </CardFooter>\n          </Card>\n        </div>\n\n        <div className=\"col \">\n          <Card style={{ backgroundColor: \"#0d47a1\", borderColor: \"primary \" }}>\n            <CardImg\n              src=\"../images/graph.png\"\n              alt=\"Portfolio\"\n              className=\"align-self-center homeImg\"\n            />\n            <CardFooter>\n              <Link to=\"/portfolio\" className=\"nav-link\">\n                <i className=\"fa fa-eye fa-lg\" />\n                WatchList\n              </Link>\n            </CardFooter>\n          </Card>\n        </div>\n\n        <div className=\"col \">\n          <Card style={{ backgroundColor: \"#0d47a1\", borderColor: \"primary \" }}>\n            <CardImg\n              src=\"../images/todo.jpg\"\n              alt=\"To-do\"\n              className=\"align-self-center homeImg\"\n            />\n            <CardFooter>\n              <Link to=\"/todo\" className=\"nav-link\">\n                <i className=\"fa fa-list fa-lg\" />\n                My Tasks\n              </Link>\n            </CardFooter>\n          </Card>\n        </div>\n      </div>\n      {/* </Jumbotron> */}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Button, Label, Col, Row } from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\n\nclass AddWatchList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      stock: \"\",\n      limitPrice: \"\",\n      touched: {\n        stock: false,\n        limitPrice: false,\n      },\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.deleteProduct = this.deleteProduct.bind(this);\n  }\n\n  // ****************Delete Placed Order ***************\n  // deleteProduct = (id) => {\n  //   console.log(id);\n  //   //copy current list item\n  //   alert(\"Confirm Delete stock :\" + id);\n  //   this.props.deleteProduct(id);\n  // };\n\n  // *************** Handle Submit****************\n  handleSubmit = (values) => {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    this.props.addProduct(values.stock, values.limitPrice);\n    this.props.toggle();\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n          <Row className=\"form-group\">\n            <Label htmlFor=\"stock\" md={2}>\n              Stock\n            </Label>\n            <Col md={4}>\n              <Control.text\n                model=\".stock\"\n                id=\"stock\"\n                name=\"stock\"\n                placeholder=\"Stock Symbol\"\n                className=\"form-control\"\n                validators={{\n                  required,\n                  minLength: minLength(3),\n                  maxLength: maxLength(6),\n                }}\n              />\n              <Errors\n                className=\"text-danger\"\n                model=\".stock\"\n                show=\"touched\"\n                component=\"div\"\n                messages={{\n                  required: \"Required\",\n                  minLength: \"Must be at least 3 characters\",\n                  maxLength: \"Must be 15 characters or less\",\n                }}\n              />\n            </Col>\n\n            <Label htmlFor=\"limitPrice\" md={2}>\n              Rate\n            </Label>\n            <Col md={3}>\n              <Control.text\n                model=\".limitPrice\"\n                id=\"limitPrice\"\n                name=\"limitPrice\"\n                placeholder=\"Price\"\n                className=\"form-control\"\n                validators={{\n                  required,\n                  minLength: minLength(1),\n                  maxLength: maxLength(15),\n                  isNumber,\n                }}\n              />\n              <Errors\n                className=\"text-danger\"\n                model=\".limitPrice\"\n                show=\"touched\"\n                component=\"div\"\n                messages={{\n                  required: \"Required\",\n                  minLength: \"Must be at least 1 numbers\",\n                  maxLength: \"Must be 15 numbers or less\",\n                  isNumber: \"Must be a number\",\n                }}\n              />\n            </Col>\n\n            <Col md={1}>\n              <Button type=\"submit\" color=\"primary\">\n                Add\n              </Button>\n            </Col>\n          </Row>\n        </LocalForm>\n      </React.Fragment>\n    );\n  }\n}\nexport default AddWatchList;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nclass MarketGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockXValue: [],\n      stockYValue: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n  }\n  fetchStock() {\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    // cconst API_CALL = \"\";\n    // const API_KEY = \"Y6SUHRSJL92Y8380\";\n     let API_CALL = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=IBM&outputsize=compact&apikey=Y6SUHRSJL92Y8380`;\n    let stockxValueFunc = [];\n    let stockyValueFunc = [];\n    fetch(API_CALL)\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        console.log(data);\n        for (var key in data[\"Time Series (Daily)\"]) {\n          stockxValueFunc.push(key);\n          stockyValueFunc.push(data[\"Time Series (Daily)\"][key][\"1. open\"]);\n        }\n        console.log(stockxValueFunc);\n        pointerToThis.setState({\n          stockXValue: stockxValueFunc,\n          stockYValue: stockyValueFunc,\n        });\n      });\n  }\n\n  render() {\n    //   const [modal, setModal] = useState(false);\n\n    // const toggleModal = () => setModal(!modal);\n    // const closeBtn = (\n    //   <Button className=\"close\" onClick={toggleModal}>\n    //     &times;\n    //   </Button>\n    // );\n    return (\n      <div>\n        {/* <Modal isOpen={modal} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal} close={closeBtn}>\n            Stock Performance\n          </ModalHeader>\n          <ModalBody> */}\n        <Plot\n          data={[\n            {\n              x: this.state.stockXValue,\n              y: this.state.stockYValue,\n              type: \"scatter\",\n              mode: \"lines+markers\",\n              marker: { color: \"red\" },\n            },\n          ]}\n          layout={{ width: 440, height: 440, title: \"Performance\" }}\n        />\n        {/* </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n         */}\n\n        {/* <p>x value: {this.state.stockXValue}</p>\n        <p>y value: {this.state.stockYValue}</p> */}\n      </div>\n    );\n  }\n}\nexport default MarketGraph;\n","import React, { useState } from \"react\";\nimport { Table, Card, Collapse,ModalBody, ModalHeader, Modal, ModalFooter, Button } from \"reactstrap\";\nimport AddWatchList from \"./AddWatchList\";\nimport MarketGraph from \"./MarketGraph\";\n// function showDetail(stockSymbol){\n//   console.log(\"called\");\n//   return(\n//       <MarketGraph stock = {stockSymbol} toggleModal={true}/>\n//   );\n\n// }\nfunction Portfolio(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const { products, deleteProduct } = props;\n  \n  const [modal, setModal] = useState(false);\n  const toggleModal = () => setModal(!modal);\n  const closeBtn = (\n    <Button className=\"close\" onClick={toggleModal}>\n      &times;\n    </Button>\n  );\n  const list = products.map((product) => {\n    return (\n      <tr key={product.id}>\n        {/* <td><Button onClick={()=>showDetail(product.stock)} color=\"primary\"><i className=\"fa fa-plus fa-sm\" /></Button></td> */}\n        <td><Button onClick={toggleModal} color=\"primary\"><i className=\"fa fa-eye fa-sm\" /></Button></td>\n        <Modal isOpen={modal} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal} close={closeBtn}>\n            Stock Performance\n          </ModalHeader>\n          <ModalBody>\n            <MarketGraph />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n        \n        <td>{product.stock}</td>\n        <td>{product.limitPrice}</td>\n        <td>\n          <Button\n            onClick={() => {\n              deleteProduct(product.id);\n            }}\n            color=\"danger\"\n          >\n            <i className=\"fa fa-trash fa-sm\" />\n          </Button>\n        </td>\n      </tr>\n    );\n  });\n  if (products != null) {\n    return (\n      <div className=\"container container-size\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Card outline color=\"primary\" className=\"align-center\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <h4>My WatchList</h4>\n                </div>\n                <div className=\"col\">\n                  <Button onClick={toggle} color=\"primary\">\n                    {\" \"}\n                    <i className=\"fa fa-plus fa-lg\" /> WatchList\n                  </Button>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <Collapse isOpen={isOpen}>\n                    <Card\n                      style={{\n                        backgroundColor: \"#e3f2fd\",\n                        borderColor: \"primary \",\n                      }}\n                    >\n                      <AddWatchList\n                        products={props.products}\n                        addProduct={props.addProduct}\n                        toggle={toggle}\n                      />\n                    </Card>\n                  </Collapse>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col\">\n            {\" \"}\n            <Table striped responsive>\n              <thead>\n                <tr>\n                  <th scope=\"row\">#</th>\n                  <th>Stock </th>\n\n                  <th>Price</th>\n\n                  <th>Remove</th>\n                </tr>\n              </thead>\n              <tbody>{list}</tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default Portfolio;\n","import React from 'react';\n import {\n    Button,\n    Table,\n  } from \"reactstrap\";\n\nfunction TransactionDetail({ items, deleteItem }) {\n    //  const products = this.props.products;\n    console.log(\"ExpenseList :\" + { items });\n    if (items != null) {\n      const list = items.map((item) => {\n        return (\n          <tr key={item.id}>\n            <td>{item.id}</td>\n            <td>{item.date}</td>\n            <td>{item.merchant}</td>\n            <td>{item.item}</td>\n            <td>{item.amount}</td>\n  \n            <td>\n              <Button\n                color=\"danger\"\n                onClick={() => {\n                  deleteItem(item.id);\n                }}\n              >\n              <i className=\"fa fa-trash fa-lg\" /> \n              </Button>\n            </td>\n          </tr>\n        );\n      });\n  \n      return (\n        <div className=\"col\">\n          {\" \"}\n\n              <Table striped responsive bordered >\n                <thead>\n                  <tr>\n                    <th scope=\"row\">#</th>\n                    <th>Date</th>\n                    <th>Merchant</th>\n                    <th>Item</th>\n                    <th>Amount</th>\n                    <th>Remove</th>\n                  </tr>\n                </thead>\n                <tbody>{list}</tbody>\n              </Table>\n     \n        </div>\n      );\n    } else {\n      return <div />;\n    }\n  }\n  export default TransactionDetail;","import React from \"react\";\nimport { Card, CardTitle, CardBody } from \"reactstrap\";\n\nfunction TotalExpense({ items }) {\n  var totalIncome = 0;\n    var totalExpenses = 0;\n\n\n  if (items != null) {\n    \n    const amounts = items.map((item) => item.amount);\n    console.log(`Amount: ${amounts}`);\n    // console.log(`Transaction Type ${}`);\n    const debits = items.filter((item) => item.transactiontype === 'Debit');\n    console.log(`Debits: ${debits}`);\n    const expenses = debits.map((item) => item.amount);\n\n    console.log(`Expenses: ${expenses}`);\n    \n    const credits = items.filter((item) => item.transactiontype === 'Credit');\n    const income = credits.map(item => item.amount);\n    console.log(`Income: ${income}`);\n     if( income.length >0){\n     totalIncome = income.reduce((acc, item) => parseInt(acc) + parseInt(item));\n    console.log(\" Income: \" + totalIncome);\n     }\n     if(expenses.length >0){\n      totalExpenses = expenses.reduce((acc,item)=>parseInt(acc) + parseInt(item));\n      console.log(\"Expenses:\" + totalExpenses); \n\n     }\n   \n    return (\n      <Card outline color=\"primary\" className=\"align-center\">\n        <CardTitle >\n          <h4>Balance Summary: $ {totalIncome-totalExpenses}</h4>\n        </CardTitle>\n        <CardBody>\n          <div className=\"row\">\n      <div className=\"col\">\n          \n          <h4> Income: + $ {totalIncome}</h4>\n       \n          </div>\n        <div className=\"col\">\n          <h4>Expense: - $ {totalExpenses}</h4>\n        </div>\n        </div>\n      \n      \n      </CardBody>\n      </Card>\n    );\n    }else{\n      return (<div />);\n    }\n  } \n\n\nexport default TotalExpense;\n","import React, { Component } from \"react\";\nimport {\n  Col,\n  Row,\n  Button,\n  Label,\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport { Control, Form, Errors } from \"react-redux-form\";\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\nconst dateformat = (val) => {\n  \n  var bits = val.split('/');\n  var d = new Date(bits[2], bits[1] - 1, bits[0]);\n  return d && (d.getMonth() + 1) === parseInt(bits[1]);\n}\n\n  \n \n\nfunction AddTransaction(props) {\n  // alert(JSON.stringify(props));\n  // alert(props.items);\n  return (\n   \n      <div className=\"row\">\n        <AddTransactionForm\n          addExpense={props.addExpense}\n          resetTransactionForm={props.resetTransactionForm}\n          toggle={props.toggle}\n        />\n      </div>\n    \n  );\n}\nclass AddTransactionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      date: new Date(),\n      merchant: \"\",\n      item: \"\",\n      amount: 0,\n      transactiontype: \"\",\n      touched: {\n        date: false,\n        merchant: false,\n        amount: false,\n      },\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = (values) => {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    this.props.addExpense(\n      values.date,\n      values.merchant,\n      values.item,\n      values.amount,\n      values.transactiontype\n    );\n   \n    this.props.resetTransactionForm();\n    this.props.toggle();\n\n  };\n\n  render() {\n    return (\n      <div className=\"container \">\n        <div className=\"row m-1\">\n          <div className=\"col \">\n            <Card\n              style={{ backgroundColor: \"#e3f2fd\", borderColor: \"primary \" }}\n            >\n              <CardHeader>Add Transactions</CardHeader>\n              <CardBody>\n                <Form\n                  model=\"transactionForm\"\n                  onSubmit={(values) => this.handleSubmit(values)}\n                >\n                  {/* <Row className=\"form-group\">\n                    <Label htmlFor=\"date\" md={3}>\n                      Date\n                    </Label>\n                    <Col md={9}>\n                    <Control.select\n                      model=\".date\"\n                      id=\"date\"\n                      name=\"date\"\n                      type=\"text\"\n                      placeholder=\"mm/dd/yyyy\"\n                      component={DatePickerComponent}\n                      className=\"form-control\" \n                      dateFormat=\"YYYY-MM-DD\"\n                    />\n                   <DatePicker\n                      onChange={(date) => this.setSelectedDate(date)}\n                    /> \n                    </Col>\n                  </Row>*/}\n                  <Row className=\"form-group\">\n                    <Label htmlFor=\"date\" md={3}>\n                      Date\n                    </Label>\n                    <Col md={9}>\n                      <Control.text\n                        model=\".date\"\n                        id=\"date\"\n                        name=\"date\"\n                        placeholder=\"dd/mm/yyyy\"\n                        className=\"form-control\"\n                        validators={{\n                          required,\n                          dateformat,\n                        }}\n                      />\n                      <Errors\n                        className=\"text-danger\"\n                        model=\".date\"\n                        show=\"touched\"\n                        component=\"div\"\n                        messages={{\n                          required: \"Required\",\n                          dateformat: \"Invalid Date\",\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                    <Label htmlFor=\"merchant\" md={3}>\n                      Merchant\n                    </Label>\n                    <Col md={9}>\n                      <Control.text\n                        model=\".merchant\"\n                        id=\"merchant\"\n                        name=\"merchant\"\n                        placeholder=\"Merchant Name\"\n                        className=\"form-control\"\n                        validators={{\n                          required,\n                          minLength: minLength(3),\n                          maxLength: maxLength(15),\n                        }}\n                      />\n                      <Errors\n                        className=\"text-danger\"\n                        model=\".merchant\"\n                        show=\"touched\"\n                        component=\"div\"\n                        messages={{\n                          required: \"Required\",\n                          minLength: \"Must be at least 3 characters\",\n                          maxLength: \"Must be 15 characters or less\",\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                    <Label md={3}>Item</Label>\n                    <Col md={9}>\n                      <Control.select\n                        model=\".item\"\n                        name=\"item\"\n                        className=\"form-control\"\n                      >\n                        <option>Choose Transaction Type</option>\n                        <option>Income</option>\n                        <option>Charity</option>\n                        <option>Savings</option>\n                        <option>Rent</option>\n                        <option>Water</option>\n                        <option>Electricity</option>\n                        <option>Trash</option>\n                        <option>Internet</option>\n                        <option>Maintenance</option>\n                        <option>Gas</option>\n                        <option>Groceries</option>\n                        <option>Restaurants</option>\n                        <option>Clothing</option>\n                        <option>Phone</option>\n                        <option>Cosmetics</option>\n                        <option>Child Care</option>\n                        <option>Entertainment</option>\n                        <option>Health Care</option>\n                        <option>Insurance</option>\n                        <option>Credit Card</option>\n                        <option>Loan</option>\n                        <option>Others</option>\n                      </Control.select>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"form-group\">\n                    <Label htmlFor=\"amount\" md={3}>\n                      Amount\n                    </Label>\n                    <Col md={9}>\n                      <Control.text\n                        model=\".amount\"\n                        id=\"amount\"\n                        name=\"amount\"\n                        placeholder=\"$ \"\n                        type=\"text\"\n                        className=\"form-control\"\n                        validators={{\n                          required,\n                          minLength: minLength(1),\n                          maxLength: maxLength(15),\n                          isNumber,\n                        }}\n                      />\n                      <Errors\n                        className=\"text-danger\"\n                        model=\".amount\"\n                        show=\"touched\"\n                        component=\"div\"\n                        messages={{\n                          required: \"Required\",\n                          minLength: \"Must be at least 1 number\",\n                          maxLength: \"Must be 15 numbers or less\",\n                          isNumber: \"Must be a number\",\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                    <Label md={3}>Card</Label>\n                    <Col md={9}>\n                      <Control.select\n                        model=\".transactiontype\"\n                        name=\"transactiontype\"\n                        className=\"form-control\"\n                      >\n                        <option>Select</option>\n                        <option>Credit</option>\n                        <option>Debit</option>\n                      </Control.select>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"form-group\">\n                    <Col md={{ size: 6, offset: 1 }}>\n                      <Button type=\"submit\" color=\"primary\">\n                        Add Transaction\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default AddTransaction;\n","import React, { Component, useState } from \"react\";\nimport TransactionDetail from \"./TransactionDetail\";\nimport TotalExpense from \"./TotalExpense\";\nimport { Button, Card, Collapse } from \"reactstrap\";\nimport AddTransaction from \"./AddTransaction\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nfunction MyNav(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"portrait\"; // portrait or landscape\n\n    const marginLeft = 40;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"My Transaction\";\n    const headers = [[\"Date\", \"Merchant\", \"Item\", \"Amount\"]];\n\n    const data = props.items.map((item) => [\n      item.date,\n      item.merchant,\n      item.item,\n      item.amount,\n    ]);\n\n    let content = {\n      startY: 50,\n      head: headers,\n      body: data,\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"MonthlyTransaction.pdf\");\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"row m-3\">\n        <div className=\"col\">\n          <Button onClick={toggle} color=\"primary\">\n            {\" \"}\n            <i className=\"fa fa-plus fa-lg\" /> New Transaction\n          </Button>\n        </div>\n        <div className=\"col\">\n          <Button onClick={() => exportPDF()} color=\"primary\">\n            <i className=\"fa fa-download fa-lg\" /> Save as Pdf\n          </Button>\n        </div>\n      </div>\n\n      <Collapse isOpen={isOpen}>\n        <Card outline color=\"primary\" className=\"align-center\">\n          \n              <AddTransaction\n                items={props.items}\n                addExpense={props.addExpense}\n                resetTransactionForm={props.resetTransactionForm}\n                toggle={toggle}\n              />\n            \n        </Card>\n      </Collapse>\n    </React.Fragment>\n  );\n}\n\nclass Budget extends Component {\n  render() {\n    return (\n      <div className=\"container-size\">\n        <TotalExpense items={this.props.items} />\n\n        <MyNav\n          items={this.props.items}\n          addExpense={this.props.addExpense}\n          resetTransactionForm={this.props.resetTransactionForm}\n        />\n        <div className=\"row\">\n          <TransactionDetail\n            items={this.props.items}\n            deleteItem={this.props.deleteItem}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Budget;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  Row,\n  Card,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardFooter,\n} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport {Link} from 'react-router-dom';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users:this.props.users,\n      email: \"\",\n      password: \"\",\n      isRegistered:false,\n      touched: {\n        email: false,\n        password: false,\n      },\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  authenticateUser(values){\n      // const email=  values.email;\n      // const pwd = values.pwd;\n      // const user = this.state.users.filter(user => user.email === email);\n      \n      \n\n  }\n\n  handleSubmit = (values) => {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    this.authenticateUser(values);\n    // this.props.addProduct(values.stock, values.limitPrice);\n  };\n  render() {\n    return (\n      <div className=\"container container-size\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Card  style={{ backgroundColor: \"#e3f2fd\", borderColor: \"primary \" }} className=\"card-login\">\n              <CardTitle>\n                <h4>Welcome!</h4></CardTitle>\n              <CardSubtitle ><h5> Log in to your account</h5></CardSubtitle>\n              <CardBody>\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                  <Row className=\"form-group\">\n                   \n                    <Col >\n                      <Control.text\n                        model=\".email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        className=\"form-control\"\n                        validators={{\n                          required,\n                          minLength: minLength(3),\n                          maxLength: maxLength(6),\n                        }}\n                      />\n                      <Errors\n                        className=\"text-danger\"\n                        model=\".email\"\n                        show=\"touched\"\n                        component=\"div\"\n                        messages={{\n                          required: \"Required\",\n                          minLength: \"Must be at least 3 characters\",\n                          maxLength: \"Must be 15 characters or less\",\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                   \n                    <Col >\n                      <Control.text\n                        model=\".password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        className=\"form-control\"\n                        validators={{\n                          required,\n                          minLength: minLength(1),\n                          maxLength: maxLength(15),\n                          isNumber,\n                        }}\n                      />\n                      <Errors\n                        className=\"text-danger\"\n                        model=\".password\"\n                        show=\"touched\"\n                        component=\"div\"\n                        messages={{\n                          required: \"Required\",\n                          minLength: \"Must be at least 1 numbers\",\n                          maxLength: \"Must be 15 numbers or less\",\n                          isNumber: \"Must be a number\",\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                    <Col >\n                      <Button type=\"submit\" color=\"primary\" className=\"loginButton\">\n                      Log In\n                      </Button>\n                    </Col>\n                  </Row>\n                </LocalForm>\n              </CardBody>\n              <CardFooter>\n                New User ?  {\"   \"}\n              \n                <Link to=\"/registerUser\">\n                 Sign Up\n                 </Link>\n             \n\n              </CardFooter>\n            </Card>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\nexport default Login;\n","import React from \"react\";\nimport { Input, Label } from \"reactstrap\";\n\n\nfunction Income() {\n    return (\n       \n      <div className=\"row\" style={{\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n          <div className=\"col-md-1\">\n          <Label>Income</Label>\n          </div>\n        <div className=\"col-md-3  text-muted\">\n          \n          <Input placeholder=\"+0.00\" />\n        </div>\n      </div>\n      \n    );\n  }\n\n  export default Income;","import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardFooter,\n} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n// const isNumber = (val) => !isNaN(+val);\nconst validateEmail = (val) => {\n  var re = /\\S+@\\S+\\.\\S+/;\n  return re.test(val);\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: this.props.users,\n      email: \"\",\n      password: \"\",\n      isRegistered: false,\n      touched: {\n        email: false,\n        password: false,\n      },\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = (values) => {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    this.props.addUser(values.email,values.password);\n    alert(\"Successfully Added\");\n    // const newUser = {\n    //     id: this.state.users.length,\n    //     email: values.email,\n    //     password: values.password\n    //   };\n  \n    //   const users = [...this.state.users];\n    //   users.push(newUser);\n      \n    //   this.setState(\n    //     {\n    //       users: users,\n    //       email:\"\",\n    //       password:\"\"\n    //     },\n    //     () => {\n    //       alert(\"Current state is: \" + JSON.stringify(this.state));\n    //     });\n    };\n\n    \n\n  render() {\n    return (\n      <div className=\"container container-size\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Card\n              style={{ backgroundColor: \"#e3f2fd\", borderColor: \"primary \" }}\n              className=\"card-login\"\n            >\n              <CardSubtitle>\n                <h5>Sign Up for free</h5>\n              </CardSubtitle>\n              <CardBody>\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                  <Row className=\"form-group\">\n                    <Col>\n                      <Control.text\n                        model=\".email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        className=\"form-control\"\n                        validators={{\n                          required,\n                          validateEmail,\n                        }}\n                      />\n                      <Errors\n                        className=\"text-danger\"\n                        model=\".email\"\n                        show=\"touched\"\n                        component=\"div\"\n                        messages={{\n                          required: \"Required\",\n                          validateEmail: \"Invalid email id\",\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                    <Col>\n                      <Control.text\n                        model=\".password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        className=\"form-control\"\n                        validators={{\n                          required,\n                          minLength: minLength(6),\n                          maxLength: maxLength(15),\n                        }}\n                      />\n                      <Errors\n                        className=\"text-danger\"\n                        model=\".password\"\n                        show=\"touched\"\n                        component=\"div\"\n                        messages={{\n                          required: \"Required\",\n                          minLength: \"Must be 6 characters in length\",\n                          maxLength: \"Must be 15 characters or less\",\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                    <Col>\n                      <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        className=\"loginButton\"\n                      >\n                        Sign Up\n                      </Button>\n                    </Col>\n                  </Row>\n                </LocalForm>\n              </CardBody>\n              <CardFooter>\n                Already have an account ?  {\"   \"}\n                <Link to=\"/login\">Log In</Link>\n              </CardFooter>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Register;\n","import React from \"react\";\n\nfunction Note(props) {\n  function handleClick() {\n    props.onDelete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <p>{props.title}</p>\n      <p>{props.content}</p>\n      <button onClick={handleClick} className=\"todo-button\">\n        <i className=\"fa fa-trash fa-sm\" />\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value,\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\",\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form className=\"form-area\">\n        <input\n          className=\"input-area\"\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        />\n        <input\n          className=\"input-area\"\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Add a task...\"\n        />\n        <button onClick={submitNote} className=\"todo-button\">\n        <i className=\"fa fa-plus fa-sm\" />\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction TodoList() {\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container container-size\">\n      <h2>Add Task</h2>\n\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        \n          return (\n            <Note\n              key={index}\n              id={index}\n              title={noteItem.title}\n              content={noteItem.content}\n              onDelete={deleteNote}\n            />\n          );\n       \n      })}\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport Portfolio from \"./Portfolio\";\nimport Budget from \"./Budget\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"react-redux-form\";\nimport {\n  addProduct,\n  deleteProduct,\n  addExpense,\n  deleteItem,\n  addUser\n} from \"../redux/ActionCreators\";\nimport Income from \"./Income\";\nimport Register from \"./RegisterUser\";\nimport TodoList from \"./TodoList\";\n\n\nconst mapDispatchToProps = {\n  addProduct: (stock, limitPrice) => addProduct(stock, limitPrice),\n  deleteProduct: (id) => deleteProduct(id),\n  addExpense: (date, merchant, item, amount, transactiontype) =>\n    addExpense(date, merchant, item, amount, transactiontype),\n  deleteItem: (id) => deleteItem(id),\n  resetTransactionForm: () => actions.reset(\"transactionForm\"),\n  addUser: (email,password) => addUser(email,password),\n};\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n    items: state.expenses,\n    users:state.users\n  };\n};\n\nvar userIsRegistered = true;\nclass Main extends Component {\n  render() {\n    const HomePage = () => {\n      return <Home />;\n    };\n\n    return (\n      <div>\n        <Header />\n\n        <Switch>\n          <Route path=\"/home\" component={HomePage} />\n          <Route\n            exact\n            path=\"/portfolio\"\n            render={() => (\n              <Portfolio\n                products={this.props.products}\n                addProduct={this.props.addProduct}\n                deleteProduct={this.props.deleteProduct}\n                isRegistered={userIsRegistered}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/budget\"\n            render={() => (\n              <Budget\n                items={this.props.items}\n                deleteItem={this.props.deleteItem}\n                addExpense={this.props.addExpense}\n                resetTransactionForm={this.props.resetTransactionForm}\n              />\n            )}\n          />\n           <Route path=\"/todo\" component={TodoList} />\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <Login isRegistered={userIsRegistered} users={this.props.users}/>}\n          />\n          <Route exact path=\"/registerUser\" render={() => <Register users={this.props.users} addUser={this.props.addUser}/>} />\n          {/* <Route exact path=\"/marketgraph\" render={()=> <MarketGraph stock={stock}/> } /> */}\n          <Route exact path=\"/income\" component={Income} />\n          <Redirect to=\"/home\" />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport const addExpense = (date, merchant, item, amount,transactiontype) => ({\n  type: ActionTypes.ADD_EXPENSE,\n  payload: {\n    date: date,\n    merchant: merchant,\n    item: item,\n    amount: amount,\n    transactiontype:transactiontype,\n  },\n});\n\nexport const deleteItem = (id) => ({\n  type: ActionTypes.DELETE_EXPENSE,\n  payload: {\n    id: id,\n  },\n});\n\nexport const addProduct = (\n  stock,\n  limitPrice,\n) => ({\n  type: ActionTypes.ADD_PRODUCT,\n  payload: {\n    stock: stock,\n    limitPrice: limitPrice\n  },\n});\nexport const deleteProduct = (id) => ({\n  type: ActionTypes.DELETE_PRODUCT,\n  payload: {\n    id: id,\n  },\n});\nexport const addUser =(email,password)=>({\n  type:ActionTypes.ADD_USER,\n  payload:{\n    email: email,\n    password: password\n  }\n});","export const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const ADD_EXPENSE = \"ADD_EXPENSE\";\nexport const DELETE_EXPENSE = \"DELETE_EXPENSE\";\nexport const ADD_USER = \"ADD_USER\";","export const PRODUCTS = [\n  {\n    id: 0,\n     stock: \"EXPE\",\n    limitPrice: 350,\n  },\n  {\n    id: 1,\n     stock: \"AMZN\",\n    limitPrice: 200,\n  },\n  {\n    id: 2,\n    stock: \"MSFT\",\n    limitPrice: 790,\n  },\n  {\n    id: 3,\n    stock: \"GOOG\",\n    limitPrice: 690,\n  },\n  {\n    id: 4,\n    stock: \"AAPL\",\n    limitPrice: 3000,\n  },\n];\n","import { PRODUCTS } from \"../shared/products\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Products = (state = PRODUCTS, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_PRODUCT:\n      var product = action.payload;\n      \n      product.id = state.length;\n      console.log(\"No. of shares\",state.length);\n      return state.concat(product);\n    case ActionTypes.DELETE_PRODUCT:\n      // var id = action.payload.id;\n      return [...state.filter((product) => product.id !== action.payload.id)];\n   \n\n    default:\n      return state;\n  }\n};\n","export const EXPENSES = [\n  {\n    id: 0,\n    date: \"05/31/2020\",\n    merchant: \"FredMyer\",\n    item: \"Groceries\",\n    amount: 45,\n    transactiontype: \"Debit\",\n  },\n];\n","import { EXPENSES } from \"../shared/expenses\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Expenses = (state = EXPENSES, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_EXPENSE:\n      var expense = action.payload;\n      expense.id = state.length;\n      console.log(\"Add\" + JSON.stringify(state.concat(expense)));\n      return state.concat(expense);\n     \n\n    case ActionTypes.DELETE_EXPENSE:\n      // var id = action.payload.id;\n      return [...state.filter((item) => item.id !== action.payload.id)];\n\n    default:\n      return state;\n  }\n};\n","export const InitialTransaction = {\n    date: \"\",\n    merchant: \"\",\n    item: \"Choose Transaction Type\",\n    amount: \"\",\n    transactiontype: \"Select\",\n};","export const USERS = [\n    {\n      id: 0,\n      email: \"abc@test.com\",\n      password: \"123abc\",\n    }\n];","import {USERS} from '../shared/users';\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Users = (state=USERS,action)=>{\n    switch (action.type) {\n        case ActionTypes.ADD_USER:\n            var user = action.payload;\n            user.id = state.length;\n            console.log(\"Add\" + JSON.stringify(state.concat(user)));\n            return state.concat(user);\n        default:return state;\n    }\n};","import React from \"react\";\nimport Main from \"./component/Main\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ConfigureStore } from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\nimport { Products } from \"./products\";\nimport { Expenses } from \"./expense\";\nimport { createForms } from 'react-redux-form';\nimport { InitialTransaction } from './AddTransationForm';\nimport { Users } from \"./users\";\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    combineReducers({\n      products: Products,\n      expenses: Expenses,\n      users: Users,\n      ...createForms({\n        transactionForm: InitialTransaction\n    })\n    })\n  );\n\n  return store;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}